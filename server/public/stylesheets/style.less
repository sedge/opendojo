/**
*                 ========================
*                 Nariyuki LESS-ification!
*                 ========================
*
* - Notice how for many classes now, whenever possible, LESS scope syntax is used to cleanly discern
* scope and namespace of child classes or elements, and respective selectors.
*
* - Parametric mixins (function-like classes) are defined to reduce repetitive code
*
* - Global variables are created for future-proofing and reuse of chosen color schemes
*
*/

@import (inline) "../../../node_modules/bootstrap/dist/css/bootstrap.min.css";

// Common colors
@bodyColor: #000;
@defaultTextColor: #aaa;
@borderColor: #222;
@focusColor: #3399ff;

@font-face {
  font-family: "nariyuki";
  src: url("../fonts/konfuciousez.woff") format('woff');
}

// Common settings
._defaultText {
  color: @defaultTextColor;
  font-size: 20px;
}

._background {
  background-color: @bodyColor;
}

._border(@borderColor: @borderColor) {
  border-color: @borderColor;
}

._alert(@alertColor) {
  background: @alertColor;
  color: lighten(@alertColor, 60%);
  border-color: @bodyColor;
}

html {
  height: 100%;
}

body {
  height: 100%;
  margin: 0;
  padding-top: 50px;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-image: linear-gradient(to top, lighten(#0F0F0F, 5%) 0%, @bodyColor 100%);
  ._defaultText;
}

#main {
  padding-top: 50px;
  padding-bottom: 70px;
}

// LESSifying these wildly nested nav classes does not work at the moment
.navbar-default .navbar-nav>.active>a, .navbar-default .navbar-nav>.active>a:focus, .navbar-default .navbar-nav>.active>a:hover {
  background-color: @borderColor;
  color: @focusColor;
}

.navbar-default .navbar-nav {
  >li {
    >a {
      &:focus, &:hover {
        color: #fff;
      }
    }
  }
}

.navbar {
  background: @bodyColor;
  color: @defaultTextColor;
  border: none;
  margin: 0px;
}

.navbar-fixed-top .navbar-brand {
  font-family: nariyuki;
  font-size: xx-large;
  color: lighten(#842210, 10%);
}

.dropdown-menu {
  margin-left: 45%;
  background: @bodyColor;
  color: @defaultTextColor;
  ._border;
  >li {
    >a {
      color: @defaultTextColor;
      &:focus, &:hover {
        color: #fff;
      }
    }
  }
}

.warnText {
  color: darken(#ff9933, 10%);
}

.nav {
  li{
    a {
      &:focus, &:hover {
        ._background;
      }
    }
  }
}

.dropdown-submenu:hover > a {
  background-image: none;
  ._background;
}

.dropdown-menu .divider {
  background: @borderColor;
}

.popover {
  margin-top: 1%;
  background: @borderColor;
  color: #ffffff;
}

.arrow, .popover-title {
  background: transparent;
  border-right-color: transparent;
}

.popover.right>.arrow:after {
  border-right-color: @borderColor;
}

.popover.left>.arrow:after {
  border-left-color: @borderColor;
}

.btn-default {
  background: @borderColor;
  color: #fff;
  border-color: transparent;

  &:hover {
    color: #fff;
    background-color: lighten(@borderColor, 10%);
    border-color: transparent !important;
  }

  &:disabled {
    color: lighten(@borderColor, 10%);
  }
}

button {
  &:disabled {
    color: lighten(@borderColor, 10%);
  }
}

.alert {
  text-align: center;
  width: 40%;
  margin: 0 auto;
}

.alert-info {
  background-color: @borderColor;
  border-color: transparent;
  color: lighten(#31708f, 40%);
}

.alert-success {
  ._alert(#336633);
}

.alert-warning {
  ._alert(#ff9933);
}

.alert-danger {
  background: #990000;
  color: lighten(#990000, 60%);
}

.red {
  color: #ff9933; 
}

.list-group .list-group-item {
  background: @defaultTextColor;
  color: @bodyColor;
  border-color: @bodyColor;
}

.form-control {
  background: @bodyColor;
  border-color: darken(@focusColor, 40%);
  color: #fff;
}

.input-group {
  margin-bottom: 0;
}

#loginForm {
  padding-right: 11%;
}

#top {
  font-weight: bold;
  color: @bodyColor;
}

#sub {
  color: @defaultTextColor;
}

.credContainer {
  margin-left: 39.5%;
}

.glyphicon {
  font-size: 16px;
  margin-top: 8px;
}

.modal-primary {
  margin-top: 5%;
  margin-left: 35%;
}

.modal-backdrop {
  background-color: #888888;
}

.modal-header .close {
  color: #ff9933;
}

.modal-content {
  strong {
    color: @focusColor;
  }
  background: @borderColor;
  color: @defaultTextColor;
}

.breadcrumb {
  margin: 20px;
  margin-left: 27.5%;
  width: 45%;
  text-align: center;
  background: @bodyColor;
}

.panel {
  ._background;
  ._border(#604123);
}

.table-striped {
  >tbody {
    >tr {
      &:nth-of-type(odd) {
        background-color: @borderColor;
      }
    }
  }
}

a {
  color: #00B7FF;
}

// Scope block nesting via LESS is too much for such a specific reference, yet again
.table-bordered>tbody>tr>td, .table-bordered>tbody>tr>th, .table-bordered>tfoot>tr>td, .table-bordered>tfoot>tr>th, .table-bordered>thead>tr>td, .table-bordered>thead>tr>th {
  ._border(#604123);
}

// Sidenav
.sidebar-nav .navbar .navbar-collapse {
  padding: 0;
  max-height: none;
}
.sidebar-nav .navbar ul {
  float: none;
}
.sidebar-nav .navbar ul:not {
  display: block;
}
.sidebar-nav .navbar li {
  float: none;
  display: block;
}
.sidebar-nav .navbar li a {
  padding-top: 12px;
  padding-bottom: 12px;
}

.sidebar-nav .navbar .container, .students .container, .ranks .container, .attendances .container, .students .studentView container, .ranks .rankView container,  .attendances .attendanceView container, .classes .container, .classes .classesView containter {
  width: 100%;
}

.notDisplay{
  display:none;
}

.table>tbody>tr>td .rankName{
  white-space: pre;
}
